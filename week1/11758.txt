1. 좌표3개 A, B, C 가 주어짐 순서대로 이은선분이 반시계 방향이면 1, 시계 방향이면 -1, 일직선이면 0 출력 하는 문제
2. 선분3 개를 이용해서 CCW 알고리즘을 이용하여 세 선분의 관계를 찾아냄 양수 -> 반시계 , 음수 -> 시계 , 0 -> 직선
3. 
1) 선분 3개 입력받음 -> 한줄씩 입력 받으면서 x, y를 nextToken으로 나눠줌
2) CCW 함수에서 (bx - cx) * (ay - by) - (by - cy) * (ax - bx) 를 사용하서 ccw 값이 양수,음수,0 인지 검사함
3) 리턴값으로 양수,음수,0 값에따라 1, -1, 0 가져옴
4) 출력
4.
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;
import java.util.StringTokenizer;

public class Main {
  public static void main(String[] args) throws IOException  {

    int ax,ay,bx,by,cx,cy = 0;
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    StringTokenizer st;
      
    st = new StringTokenizer(br.readLine());
    ax = Integer.parseInt(st.nextToken());
    ay = Integer.parseInt(st.nextToken());

    st = new StringTokenizer(br.readLine());
    bx = Integer.parseInt(st.nextToken());
    by = Integer.parseInt(st.nextToken());

    st = new StringTokenizer(br.readLine());
    cx = Integer.parseInt(st.nextToken());
    cy = Integer.parseInt(st.nextToken());

    System.out.println(CCW(ax,ay,bx,by,cx,cy));
  }
  
  public static int CCW(int ax, int ay, int bx, int by, int cx, int cy){
    int ccw = (bx - cx) * (ay - by) - (by - cy) * (ax - bx);

    if(ccw > 0){ 
      return -1;
    }
    else if(ccw < 0) { 
      return 1;
    }
    else {
      return 0;
    }
  }
}
