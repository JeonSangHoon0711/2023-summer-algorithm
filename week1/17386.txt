1. 좌표4개가 두줄로 주어지고 줄하나당 하나의 선분이다. 이 두 선분이 교차하는지 확인하는문제
2. 선분교차 알고리즘은 CCW를 이용한다. (CCW(A,B,C) * CCW(A,B,D) < 0) && (CCW(C,D,A) * CCW(C,D,B) < 0) 일때 선분이 교차한다.
3.
1) 좌표쌍 4개를 입력받음 ( 순서대로 ax,ay,bx,by,cx,cy,dx,dy )
2) if문 조건식 (CCW(ax,ay,bx,by,cx,cy) * CCW(ax,ay,bx,by,dx,dy) < 0 && CCW(cx,cy,dx,dy,ax,ay) * CCW(cx,cy,dx,dy,bx,by) < 0 ) 에 따라 문제에서 요구하는 1 , 0 을 출력
3) -1,000,000 ≤ x1, y1, x2, y2, x3, y3, x4, y4 ≤ 1,000,000 범위이기 때문에 곱했을때 int 범위 초과 할 수 있기때문에 CCW에서 long으로 계산을함

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;
import java.util.StringTokenizer;

public class Main {
  public static void main(String[] args) throws IOException  {

    int ax,ay,bx,by,cx,cy,dx,dy;
    ax = ay = bx = by = cx = cy = dx = dy = 0;
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    StringTokenizer st;
      
    st = new StringTokenizer(br.readLine());
    ax = Integer.parseInt(st.nextToken());
    ay = Integer.parseInt(st.nextToken());
    bx = Integer.parseInt(st.nextToken());
    by = Integer.parseInt(st.nextToken());

    st = new StringTokenizer(br.readLine());
    cx = Integer.parseInt(st.nextToken());
    cy = Integer.parseInt(st.nextToken());
    dx = Integer.parseInt(st.nextToken());
    dy = Integer.parseInt(st.nextToken());
    if(CCW(ax,ay,bx,by,cx,cy) * CCW(ax,ay,bx,by,dx,dy) < 0 && CCW(cx,cy,dx,dy,ax,ay) * CCW(cx,cy,dx,dy,bx,by) < 0){
      System.out.println(1);
    }
    else{
      System.out.println(0);
    }
  }
  
  public static int CCW(int ax, int ay, int bx, int by, int cx, int cy){
    long ccw = Long.valueOf((bx - cx)) * (ay - by) - Long.valueOf((by - cy)) * (ax - bx);

    if(ccw > 0){
      return -1;
    }
    else if(ccw < 0) { 
      return 1;
    }
    else {
      return 0;
    }
  }
}
