1. 첫번째줄에 문자열과 두번째줄에 폭발문자열이 주어짐 첫번째 문자열에 폭발문자열이있을경우 제거하는 문제 ( 문자열이 폭발 문자열을 포함하고 있는 경우에, 모든 폭발 문자열이 폭발하게 된다. 남은 문자열을 순서대로 이어 붙여 새로운 문자열을 만든다. 새로 생긴 문자열에 폭발 문자열이 포함되어 있을 수도 있다. 폭발은 폭발 문자열이 문자열에 없을 때까지 계속된다. )
2. 문자열을 하나씩 stack에 push 하면서 폭발문자열과 일치하는지 검사하는 문제다. 폭발할경우 stack.pop을 폭발문자열 길이만큼 해준다.
3.
1) 문자열과 폭발문자열을 입력받음
2) 문자열의길이만큼 돌아가는 for문 생성후 stack에 문자열의i번째를 add함
3) 불리언 변수 sam = true 로 두고 문자열에 폭발문자열이 속했는지 판별하기위해 사용
4) stack의 크기가 폭발문자열의 크기보다 크거나 같을때 if문 실행 (검사 실행)
5) 폭발문자열길이만큼 돌아가는 for문 생성
6) ch1은 stack.get(stack.size() - boomlenght + j ) 로 해당 문자를 가져옴
7) ch2는 폭발문자열에서 j번때 char 값을 가져옴
8) ch1과 ch2를 폭발문자열길이만큼 반복해서 비교하는데 이때 한번이라도 일치하지않으면 불리언변수를 false 로 변경후 break함.
9) 불리언변수가 false일때 다시 기존에 실행하던 제일 상위 포문 실행
10) 불리언변수가 true 일때 폭발문자열이 문자열에 있다고 판단 -> 폭발문자열 길이만큼 pop 진행 -> 그후 다시 제일 상위 포문 실행
11) for 문 종료후 stack.size() == 0 인지 검사하여 0일경우 FRULA 출력
12) 0이 아닐경우 스택에 남은 문자를 역순해서 출력하기위한 작업실행
13) String 사용시 메모리 초과발생 -> StringBuilder을 사용
14) stack.size만큼 stack의 i번째 인덱스값을 StringBuilder에 append 반복실행
15) StringBuilder 변수 출력


import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;
import java.util.Stack;
import java.util.StringTokenizer;

public class Main {
  public static void main(String[] args) throws IOException  {

  
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    String str = "";
    String boom = "";
    String endstr ="";
    str = br.readLine();
    boom = br.readLine();
    int strlength = str.length();
    int boomlength = boom.length();
    Stack<Character> stack = new Stack<Character>();
    br.close();

    for( int i = 0; i < strlength ; i++ ){
      stack.add(str.charAt(i));

      boolean same = true;
      if(stack.size()>=boomlength){
        for( int j = 0; j < boomlength; j ++){
          char ch1 = stack.get(stack.size() - boomlength + j);
          char ch2 = boom.charAt(j);
          
          if( ch1 != ch2 ){
            same = false;
            break;
          }
        }
        if(same){
          for(int k = 0; k < boomlength; k++){
            stack.pop();
          }
        }
      }
    }
    if(stack.size()==0){
      System.out.println("FRULA");
    }
    else{
      StringBuilder sb = new StringBuilder();
      for(int i = 0; i < stack.size(); i++){
        sb.append(stack.get(i));
      }
      System.out.println(sb.toString());
    }



      
  }
  

}
