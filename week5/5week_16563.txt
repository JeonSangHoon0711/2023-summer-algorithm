1. 소인수 분해 하는 문제이다
2. 그런데 일반적인 방법으로는 시간에러가 날것이다 
첫째 줄에는 자연수의 개수 N (1 ≤ N ≤ 1,000,000)이 주어진다.
둘째 줄에는 자연수 ki (2 ≤ ki ≤ 5,000,000, 1 ≤ i ≤ N)가 N개 주어진다.
5000001 크기만큼의 배열을 만들고 각 자연수의 가장 작은 소인수를 저장해둔다
ex) 2가 소수라면 그다음 2의배수 부터는 다 2로 표시한다
그렇게 배열이 만들어지고 이배열을 이용해 소인수 분해를 할 것이다

어떤수 n 을 입력받고
ex)6
그후 while문을 돌린다
위에서만들었던 배열에 인덱스가 6인값을 stringbuilder 에 넣고 나눠주고 이를 반복한다
그후 while문이끝나면 \n을 추가하여 행을 넘긴다
마지막으로 sb를 출력한다.

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;


public class Main {
	
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		StringBuilder sb = new StringBuilder();
		
		int N = Integer.parseInt(br.readLine());	
		
		int[] minFactor = new int[5000001];
		
		for(int i=2; i<=5000000; i++) {
			minFactor[i] = i;
		}
		
		for(int i = 2; i*i <= 5000000; i++) {
			
			if(minFactor[i] == i) {	
				for(int j = i*i; j <= 5000000; j += i) {	
					if(minFactor[j] == j) {
						minFactor[j] = i;
					}
				}
			}
		}
		
		st = new StringTokenizer(br.readLine());
		for(int i = 0; i < N; i++) {
			int n = Integer.parseInt(st.nextToken());
			
			while(n > 1) {
				sb.append(minFactor[n] + " ");
				n /= minFactor[n];
			}
			sb.append("\n");
		}
		System.out.println(sb.toString());
	}
}