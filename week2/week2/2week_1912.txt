1. n개의 정수로 이루어진 임의의 수열에서 연속된 몇 개의 수를 선택하여 최대합을 구하는 것이다.
2.
(이전부터 계속 연속한값 + 현재값) 과 현재 값의 경우를 따지면 된다.
dp 배열은 i 번째까지 연속했을때의 최대 값이다.
점화식은 
dp[i] = Math.max(dp[i-1]+arr[i], arr[i]); 가 될거다
dp[i-1] + arr[i] (이전까지의 최대값 + 현재값 ) 
arr[i] 현재값
두개를 비교해서
dp 배열을 최신화 하면 된다.

3.
1) N을 입력받는다
2) StringTokenizer st = new StringTokenizer(br.readLine()); 를 사용하여 그다음 줄을 입력받는다
3) st.nextToken()을 사용하여 arr[] 배열을 채운다
4) dp 배열을 만든다 크기는 N 이다
5) dp[0] = arr[0] 이다 
6) max = arr[0] 을 사용하여 최대값을 임의 설정해준다
7) for문을 i=1 ~ i<N 까지 돌린다
8) dp[i] = Math.max(dp[i-1]+arr[i], arr[i]); 점화식을 해준다
9) 하면서 max 값도 Math.max(max, dp[i]); 해준다
10) max 값 출력하면 끝


import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

class Main {
    public static void main(String[] args) throws Exception {
				BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int N = Integer.parseInt(br.readLine());
        StringTokenizer st = new StringTokenizer(br.readLine());
				int max = 0;
        int[] arr = new int[N+1];
        for(int i = 0; i < N; i++){
            arr[i] = Integer.parseInt(st.nextToken());
        }

        int[] dp = new int[N];
        
        dp[0] = arr[0];
        max = arr[0];
        for(int i=1; i<N; i++){
            dp[i] = Math.max(dp[i-1]+arr[i], arr[i]);
            
            max = Math.max(max, dp[i]);
        }
        System.out.println(max);
        
    }
}